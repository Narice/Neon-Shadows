<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shadow_standing_Right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///states
enum states
{
    stand,
    crouch,
    slide
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables
image_speed = 0.08;
fric = 0.4;
fric_slide = 0.1;
grav = 0.6;
hsp = 0;
vsp = 0;
mvframecount = 0;
previousmv = 0;
sliding = 0;
previous_hsp_sign = 1;
state = states.stand;
    //max speeds
    maxvsp = 10;
    maxhsp = 5;
    maxcrouchhsp = 2.5;
//how much is added
jumpsp = 10;

//camera
view_zoom = 1;
view_max_zoom = 10;
view_xview = x - view_wview/2;
view_yview = y-72 - view_hview/2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MOVEMENT ----------------------------------------
//camera movement
scr_camera_movement();

switch(state)
{
    case states.stand: scr_shadow_stand(); break;
    case states.crouch: scr_shadow_crouch(); break;
    case states.slide: scr_shadow_slide(); break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPRITE GESTION -----------------------------------
//on land
if(place_meeting(x,y+1,obj_wall))
{
    if (state != states.crouch)
    {
        //standing up (standing)
        if (hsp == 0)
        {
            image_speed = 0.08;
            if (previous_hsp_sign == 1) sprite_index = spr_shadow_standing_Right;
            if (previous_hsp_sign == -1) sprite_index = spr_shadow_standing_Left;
        }
        
        //standing up (walking)
        if (mv * hsp &gt; 0)
        {
            image_speed = hsp/maxhsp * 0.08;
            if (mv == 1) sprite_index = spr_shadow_moving_Right;
            if (mv == -1) sprite_index = spr_shadow_moving_Left;
        }
        
        //"drifting"
        if (previousmv != mv &amp;&amp; mv * hsp &lt; 0)
        {
            image_speed = 0.08;
            if (mv == 1) sprite_index = spr_shadow_drift_Right;
            if (mv == -1) sprite_index = spr_shadow_drift_Left;
        }
    }
    
    if (state = states.crouch)
    {
        //crouching (standing)
        if (hsp == 0)
        {
            image_speed = 0.08;
            if (previous_hsp_sign == 1) sprite_index = spr_shadow_crouch_standing_Right;
            if (previous_hsp_sign == -1) sprite_index = spr_shadow_crouch_standing_Left;
        }
        
        //crouching (walking)
        if (mv != 0)
        {
            image_speed = hsp/maxcrouchhsp * 0.08;
            if (mv == 1) sprite_index = spr_shadow_crouch_moving_Right;
            if (mv == -1) sprite_index = spr_shadow_crouch_moving_Left;
        }
    }
    //sliding
    if (state = states.slide)
    {
        image_speed = 0.08;
        if (sign(hsp) &gt; 0) sprite_index = spr_shadow_slide_Right;
        if (sign(hsp) &lt; 0) sprite_index = spr_shadow_slide_Left;
    }
}

if(!place_meeting(x, y+1,obj_wall))
{
    //jump (up)
    if (vsp &gt; 0) 
    {
        if (mv &gt; 0)sprite_index = spr_shadow_jump_up_Right;
        if (mv &lt; 0)sprite_index = spr_shadow_jump_up_Left;
    }
    
    //jump (down)
    if (vsp &lt; 0) 
    {
        if (mv &gt; 0)sprite_index = spr_shadow_jump_down_Right;
        if (mv &lt; 0)sprite_index = spr_shadow_jump_down_Left;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PREVIOUS values
previousmv = mv;
 if (hsp != 0) previous_hsp_sign = sign(hsp);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
